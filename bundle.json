{
  "{C2DC3BB3-180E-4A88-84BB-13A697A9238D}": {
    "source": "{\n  \"name\": \"mouse\",\n  \"version\": \"0.0.6\",\n  \"description\": \"mouse operation\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"bundle\": \"wes bundle ./src/mouse.cs ./usage.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/wachaon/mouse.git\"\n  },\n  \"keywords\": [\n    \"wes\",\n    \"mouse\"\n  ],\n  \"author\": \"wachaon@gmail.com\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wachaon/mouse/issues\"\n  },\n  \"homepage\": \"https://github.com/wachaon/mouse#readme\",\n  \"wes\": {\n    \"dependencies\": {\n      \"csharpscript\": \"0.0.4\"\n    }\n  }\n}",
    "mapping": {},
    "path": "{mouse}/package.json"
  },
  "{57797C82-4DAA-46EA-97C5-09FEF1F4F0EF}": {
    "source": "const { existsFileSync } = require('filesystem')\r\nconst { resolve } = require('pathname')\r\nconst { execCommand } = require('utility')\r\nconst argv = require('argv')\r\nconst isCLI = require('isCLI')\r\nconst { execScript, compile } = require('csharpscript')\r\n\r\n// mouse\r\nconst mouse_cs = resolve(__dirname, 'src/mouse.cs')\r\nconst mouse_exe = resolve(__dirname, 'mouse.exe')\r\nconst exists_mouse_exe = existsFileSync(mouse_exe)\r\nconst mouse = 'mouse'\r\nconst Main = 'Main'\r\n\r\n// mouse method\r\nfunction pos(x = 0, y = 0) {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} pos ${x} ${y}`)\r\n    else execScript(mouse_cs, mouse, Main, 'pos', x, y)\r\n}\r\n\r\nfunction click() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} click`)\r\n    else execScript(mouse_cs, mouse, Main, 'click', 0, 0)\r\n}\r\n\r\nfunction leftDown() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} leftDown`)\r\n    else execScript(mouse_cs, mouse, Main, 'leftDown', 0, 0)\r\n}\r\n\r\nfunction leftUp() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} leftUp`)\r\n    else execScript(mouse_cs, mouse, Main, 'leftUp', 0, 0)\r\n}\r\n\r\nfunction rightClick() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} rightClick`)\r\n    else execScript(mouse_cs, mouse, Main, 'rightClick', 0, 0)\r\n}\r\n\r\nfunction rightDown() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} rightDown`)\r\n    else execScript(mouse_cs, mouse, Main, 'rightDown', 0, 0)\r\n}\r\n\r\nfunction rightUp() {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} rightUp`)\r\n    elseexecScript(mouse_cs, mouse, Main, 'rightUp', 0, 0)\r\n}\r\n\r\nfunction scroll(movement = 0) {\r\n    if (exists_mouse_exe) execCommand(`${mouse_exe} scroll ${movement}`)\r\n    else execScript(mouse_cs, mouse, Main, 'scroll', movement, 0)\r\n}\r\n\r\n\r\nif (isCLI(__filename)) {\r\n    if (argv.get('c') || argv.get('compile') || argv.unnamed[1] === 'compile') compile(mouse_cs, { out: mouse_exe })\r\n} else module.exports = {\r\n    pos,\r\n    click,\r\n    leftDown,\r\n    leftUp,\r\n    rightClick,\r\n    rightDown,\r\n    rightUp,\r\n    scroll\r\n}",
    "mapping": {
      "csharpscript": "{5D9BBB1B-EEE7-439B-BF4A-9240370CABAE}"
    },
    "path": "{mouse}/index.js"
  },
  "{5D9BBB1B-EEE7-439B-BF4A-9240370CABAE}": {
    "source": "const WShell = require('WScript.Shell')\r\n\r\nconst { readFileSync, writeFileSync, existsFileSync, deleteFileSync } = require('filesystem')\r\nconst { resolve, toWin32Sep, basename, extname } = require('pathname')\r\nconst { forEach, execCommand } = require('utility')\r\nconst { SPACE, LF, rLINE_SEP } = require('text')\r\nconst { isNumber } = require('typecheck')\r\nconst { unnamed } = require('argv')\r\nconst genGUID = require('genGUID')\r\nconst isCLI = require('isCLI')\r\n\r\nif (isCLI(__filename)) {\r\n    const args = unnamed.slice(1)\r\n    console.log(execCommand(`${getCompiler()} ${args.join(SPACE)}`))\r\n} else module.exports = {\r\n    execScript,\r\n    execSource,\r\n    compile,\r\n}\r\n\r\n// methods\r\nfunction execScript(input, Class, Method, ...params) {\r\n    const source = readFileSync(resolve(process.cwd(), input), 'auto')\r\n    return execSource(source, Class, Method, ...params)\r\n}\r\n\r\nfunction execSource(source, Class, Method, ...params) {\r\n    let args = \"\"\r\n    if (params.length) args = new Array(params.length).fill(\"\").map((arg, i) => `$args[${i}]`).join(', ')\r\n    const code = `\r\n$Source = @\"\r\n${source}\r\n\"@\r\nAdd-Type -Language CSharp -TypeDefinition $Source\r\n[${Class}]::${Method}(${args})\r\n`.split(rLINE_SEP).join(LF)\r\n    const temp = resolve(process.cwd(), genGUID() + '.ps1')\r\n\r\n    try {\r\n        console.weaklog(writeFileSync(temp, code, 'UTF-8'))\r\n        const command = `powershell -ExecutionPolicy Bypass -File \"${toWin32Sep(temp)}\" ${params.map(param => convert(param)).join(SPACE)}`\r\n        return execCommand(command)\r\n    } catch (e) {\r\n        throw e\r\n    } finally {\r\n        console.weaklog(deleteFileSync(temp))\r\n    }\r\n}\r\n\r\nfunction compile(input, options = {}) {\r\n    options.out = toWin32Sep(\r\n        resolve(\r\n            process.cwd(),\r\n            (\r\n                'out' in options\r\n                    ? options.out\r\n                    : basename(input, extname(input)) + \".exe\"\r\n            )\r\n        )\r\n    )\r\n    const opts = Object.assign({\r\n        target: \"exe\"\r\n    }, options)\r\n\r\n    let params = []\r\n    forEach((value, key) => {\r\n        params.push(`/${key}:${value}`)\r\n    })(opts)\r\n\r\n    const command = `${getCompiler()} ${params.join(\" \")} ${toWin32Sep(resolve(process.cwd(), input))}`\r\n    const result = execCommand(command)\r\n\r\n    if (isCLI(__filename)) console.log(result)\r\n    else return result\r\n}\r\n\r\n// util\r\nfunction getCompiler() {\r\n    return [\r\n        \"v4.0.30319\",\r\n        \"V3.5\",\r\n        \"V3.0\",\r\n        \"v2.0.50727\",\r\n        \"v1.1.4322\",\r\n        \"v1.0.3705\"\r\n    ]\r\n        .map((ver) => {\r\n            return toWin32Sep(\r\n                resolve(\r\n                    WShell.ExpandEnvironmentStrings(\"%SystemRoot%\"),\r\n                    \"Microsoft.NET/Framework\",\r\n                    ver,\r\n                    \"csc.exe\"\r\n                )\r\n            )\r\n        })\r\n        .find(exe => existsFileSync(exe))\r\n}\r\n\r\nfunction convert(item) {\r\n    if (item === true) return \"$True\"\r\n    if (item === false) return \"$False\"\r\n    if (item == null) return \"$Null\"\r\n    if (isNumber(item)) {\r\n        if (item !== item) \"[double]::NaN\"\r\n        if (item === Number.POSITIVE_INFINITY) return \"[double]::PositiveInfinity\"\r\n        if (item === Number.NEGATIVE_INFINITY) return \"[double]::NegativeInfinity\"\r\n        return item\r\n    }\r\n    return `\"${item}\"`\r\n}",
    "mapping": {},
    "path": "{mouse}/wes_modules/csharpscript/index.js"
  },
  "{442D74D8-5BA0-4A25-8E0B-0384AEDCD0B6}": {
    "source": "{\n  \"name\": \"csharpscript\",\n  \"version\": \"0.0.4\",\n  \"description\": \"csharp script\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"bundle\": \"wes bundle usage/example.cs usage/index.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/wachaon/csharpscript.git\"\n  },\n  \"keywords\": [\n    \"csharp\"\n  ],\n  \"author\": \"wachaon\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/wachaon/csharpscript/issues\"\n  },\n  \"homepage\": \"https://github.com/wachaon/csharpscript#readme\"\n}",
    "path": "{mouse}/wes_modules/csharpscript/package.json"
  },
  "{FD897F7B-A15E-4077-8295-73D7F0FEA1E5}": {
    "source": "using System;\r\nusing System.Runtime.InteropServices;\r\n\r\npublic class mouse {\r\n    public static void Main (params string[] args) {\r\n        string method = args[0];\r\n        int posX = args.Length > 1 ? Int32.Parse(args[1]) : 0;\r\n        int posY = args.Length > 2 ? Int32.Parse(args[2]) : 0;\r\n\r\n        int MOUSEEVENTF_LEFTDOWN = 0x0002;\r\n        int MOUSEEVENTF_LEFTUP = 0x0004;\r\n        int MOUSEEVENTF_RIGHTDOWN = 0x0008;\r\n        int MOUSEEVENTF_RIGHTUP = 0x0010;\r\n        int MOUSEEVENTF_MIDDLEDOWN = 0x0020;\r\n        int MOUSEEVENTF_MIDDLEUP = 0x0040;\r\n        int MOUSEEVENTF_WHEEL = 0x0800;\r\n\r\n        if (method == \"pos\") { SetCursorPos(posX, posY); }\r\n\r\n        if (method == \"click\" || method == \"leftDown\") { mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0); }\r\n        if (method == \"click\" || method == \"leftUp\"  ) { mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, 0); }\r\n\r\n        if (method == \"rightClick\" || method == \"rightDown\") { mouse_event(MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0); }\r\n        if (method == \"rightClick\" || method == \"rightUp\"  ) { mouse_event(MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0); }\r\n\r\n        if (method == \"middleClick\" || method == \"middleDown\") { mouse_event(MOUSEEVENTF_MIDDLEDOWN, 0, 0, 0, 0); }\r\n        if (method == \"middleClick\" || method == \"middleUp\"  ) { mouse_event(MOUSEEVENTF_MIDDLEUP, 0, 0, 0, 0); }\r\n\r\n        if (method == \"scroll\") { mouse_event(MOUSEEVENTF_WHEEL,0,0,posX,0); }\r\n    }\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    public static extern void SetCursorPos(int X, int Y);\r\n\r\n    [DllImport(\"user32.dll\")]\r\n    public static extern void mouse_event(int dwFlags, int dx, int dy, int cButtons, int dwExtraInfo);\r\n}\r\n",
    "mapping": {},
    "path": "{mouse}/src/mouse.cs"
  },
  "{0A8F63EB-4E01-4B13-BF0F-6976C35CE122}": {
    "source": "const { pos, click, scroll } = require('./index')\r\n\r\npos(350, 100)\r\nclick()\r\nscroll(-200)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconsole.log('finish!')",
    "mapping": {},
    "path": "{mouse}/usage.js"
  },
  "{98EE731C-E79F-4ADA-826D-7BB4DCEC255A}": {
    "source": "MIT License\n\nCopyright (c) 2023 wachaon\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "mapping": {},
    "path": "{mouse}/LICENSE"
  },
  "{FCECDB4B-1174-4108-8815-6F8BE3692B92}": {
    "source": "# wsh でマウス操作をする\n\n通常 wsh だけの機能ではマウスを操作することはできません。\n\n手段としては EXCEL がインストールされていれば `ExecuteExcel4Macro` を呼び出して Win32API を叩けますが、\nそれ以外だと Win32API を叩く実行ファイルをダウンロードして、`WScript.Shell` から実行する方法しかありません。\n\n.dll や .exe のダウンロードが厳しい場合は下記 C# を自身でコンパイルして実行ファイルを作成します。\n\n```c#:mouse.cs\nusing System;\nusing System.Runtime.InteropServices;\n\nnamespace Device {\n    public class Mouse {\n        public static void Main (params string[] args) {\n            string method = args[0];\n            int posX = args.Length > 1 ? Int32.Parse(args[1]) : 0;\n            int posY = args.Length > 2 ? Int32.Parse(args[2]) : 0;\n\n            if (method == \"pos\") {\n                SetCursorPos(posX, posY);\n            }\n\n            if (method == \"click\") {\n                mouse_event(0x2, posX, posY, 0, 0);\n                mouse_event(0x4, 0, 0, 0, 0);\n            }\n\n            if (method == \"leftDown\") {\n                mouse_event(0x2, posX, posY, 0, 0);\n            }\n\n            if (method == \"leftUp\") {\n                mouse_event(0x4, posX, posY, 0, 0);\n            }\n\n            if (method == \"rightClick\") {\n                mouse_event(0x8, posX, posY, 0, 0);\n                mouse_event(0x10, 0, 0, 0, 0);\n            }\n\n            if (method == \"rightDown\") {\n                mouse_event(0x8, posX, posY, 0, 0);\n            }\n\n            if (method == \"righttUp\") {\n                mouse_event(0x10, posX, posY, 0, 0);\n            }\n        }\n\n        [DllImport(\"USER32.dll\", CallingConvention = CallingConvention.StdCall)]\n        public static extern void SetCursorPos(int X, int Y);\n\n        [DllImport(\"USER32.dll\", CallingConvention = CallingConvention.StdCall)]\n        public static extern void mouse_event(int dwFlags, int dx, int dy, int cButtons, int dwExtraInfo);\n    }\n}\n```\n\nこちらを\n\n```bat\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:exe /out:mouse.exe .\\mouse.cs\n```\n\nでコンパイルして\n\n```javascript:mouse.js\nvar Shell = WScript.CreateObject('WScript.Shell')\n\nfunction SetCursorPos (x, y) {\n    Shell.Exec('mouse pos 100 100')\n}\n\nfunction Click () {\n    Shell.Exec('mouse click')\n}\n\nSetCursorPos(100, 200)\nWScript.Sleep(500)\nClick()\n```\n\nで操作できます。\n\nもし .dll や .exe などの実行ファイルのダウンロードやコンパイルが出来ない環境の場合は\nwes から C# を直接実行して操作ができます。\n\n[wes](https://github.com/wachaon/wes) は WSH のスクリプトを今風の記述で開発できるフレームワークです。\n\n+  `require/module.exports` や `import/export` が記述でき、モジュール単位で開発可能\n+  一般的なファイル操作はビルトインモジュールで対応しているので「車輪の再開発」をしなくても良い\n+  WSHのフレームワークなので、EXCEL などの COM 操作も従来通り可能\n+  外部パッケージをインストールすることも可能。\n\nなどの特徴があります。\n\nwes の入手方法は [wes](https://github.com/wachaon/wes) から wes.js をコピーしてファイルを作成するか、\nコンソールで次のコマンドを実行してください。\n\n```bat\nbitsadmin /TRANSFER GetWES https://raw.githubusercontent.com/wachaon/wes/master/wes.js %CD%\\\\wes.js\n```\n\n[@wachaon/mouse](https://github.com/wachaon/mouse) をインストールします。\n[@wachaon/mouse](https://github.com/wachaon/mouse) は powershell を使用して先ほどの C# ファイルを実行します。\n詳しくはソースを直接ご確認ください。\n\n```bat\nwes install @wachaon/mouse --bare\n```\n\n```javascript\nconst mouse = require('mouse')\n\nmouse.pos(100, 100)\nmouse.click()\n```\n\nwes を使えば wsh だけでは解決が難しい問題も比較的簡単に処理できます。\n",
    "mapping": {},
    "path": "{mouse}/README.md"
  }
}